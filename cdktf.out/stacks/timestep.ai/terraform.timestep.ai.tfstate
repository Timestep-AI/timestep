{
  "version": 4,
  "terraform_version": "1.3.9",
  "serial": 18,
  "lineage": "9bff7d33-c92d-a849-bfa0-c6aa3cdfc06d",
  "outputs": {
    "cloud_init_config_outputs_cloudinit_file": {
      "value": "cloud-config.yaml",
      "type": "string"
    },
    "cloud_instance_outputs_ipv4": {
      "value": "10.159.189.105",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "local_file",
      "name": "cloud_init_config_data_source",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#cloud-config\ndisable_root: true\npackage_reboot_if_required: true\npackage_update: true\npackage_upgrade: true\npackages: [build-essential, curl, default-jdk, direnv, figlet, jq, libbz2-dev, libffi-dev, liblzma-dev, libncursesw5-dev, libreadline-dev, libsqlite3-dev, libssl-dev, libxml2-dev, libxmlsec1-dev, net-tools, tk-dev, unzip, xz-utils, zlib1g-dev]\nruncmd:\n- [runuser, -l, ubuntu, -c, 'bash -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)\"']\n- [runuser, -l, ubuntu, -c, echo \"\" \u003e\u003e $HOME/.oh-my-bash/custom/example.sh]\n- [runuser, -l, ubuntu, -c, echo OSH_THEME=\"zork\" \u003e\u003e $HOME/.oh-my-bash/custom/example.sh]\n- [runuser, -l, ubuntu, -c, echo \"\" \u003e\u003e $HOME/.bashrc]\n- [runuser, -l, ubuntu, -c, echo \"eval \\\"\\$(direnv hook bash)\\\"\" \u003e\u003e $HOME/.bashrc]\n- [runuser, -l, ubuntu, -c, 'git clone https://github.com/anyenv/anyenv ~/.anyenv']\n- [runuser, -l, ubuntu, -c, echo \"\" \u003e\u003e $HOME/.bashrc]\n- [runuser, -l, ubuntu, -c, 'echo export PATH=\\$HOME/.anyenv/bin:\\$PATH \u003e\u003e $HOME/.bashrc']\n- [runuser, -l, ubuntu, -c, echo \"eval \\\"\\$(anyenv init -)\\\"\" \u003e\u003e $HOME/.bashrc]\n- [runuser, -l, ubuntu, -c, $HOME/.anyenv/bin/anyenv install --force-init]\n- [runuser, -l, ubuntu, -c, $HOME/.anyenv/bin/anyenv install jenv]\n- [runuser, -l, ubuntu, -c, $HOME/.anyenv/bin/anyenv install nodenv]\n- [runuser, -l, ubuntu, -c, $HOME/.anyenv/bin/anyenv install goenv]\n- [runuser, -l, ubuntu, -c, $HOME/.anyenv/bin/anyenv install pyenv]\n- [runuser, -l, ubuntu, -c, 'curl -sLS https://get.arkade.dev | sudo sh']\n- [runuser, -l, ubuntu, -c, echo \"\" \u003e\u003e $HOME/.bashrc]\n- [runuser, -l, ubuntu, -c, 'echo export PATH=\\$HOME/.arkade/bin:\\$PATH \u003e\u003e $HOME/.bashrc']\n- [runuser, -l, ubuntu, -c, arkade get k3sup]\n- [runuser, -l, ubuntu, -c, mkdir $HOME/.kube]\n- [runuser, -l, ubuntu, -c, $HOME/.arkade/bin/k3sup install --context default --k3s-extra-args \"--disable traefik\" --local --local-path $HOME/.kube/config --user ubuntu]\nusers:\n- default\n- groups: sudo\n  name: ubuntu\n  shell: /bin/bash\n  ssh_authorized_keys: [ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCdS0gFvs32Qm453PZ7+7ZuYksx/NN3PYGb9DjXywmXLATAc4MynPuZJXy8rMFZJ2UghYcXL7f5IYq8guVpRb021anDPfsiI1wl3QzyrKyBsXQDpSkcQKsjdC73v0bDVvSHcY0jy/CsbAnrArru0mmZLE2cJrqly8wHZmQXfmMfapvocdH6Y4GK2GljxNFCE6GIgfeABIactjFED7aEV70PExV1tpOu06MBBMBkhyWrD7BaMuLpChPyaI00lLzpoOVtYuJzmHSnywghRXd8bsXvCLEk42cWEPaWydtEqBeJzLYkV55n+DFvh5CSv7VzLqVUqlWIj37vXn3ygylbcOrHj3+Cu7kh1BfZiKIZdmutEjv9AkFAG9FKyoDLFrsWps/89eIHJLcX3pZna/gmrzmJdsXj2pO5IgFm+eIfLFWA3L72qlw/uz4TByiR+MhuWS75zQVv37PfIamRyyOU2WYHP8W2oU06zayP1AMTS/1a6XQHWWF2AC+mUzg8U3YsS8k= mjschock@oryp7]\n  sudo: ALL=(ALL) NOPASSWD:ALL\n",
            "content_base64": "I2Nsb3VkLWNvbmZpZwpkaXNhYmxlX3Jvb3Q6IHRydWUKcGFja2FnZV9yZWJvb3RfaWZfcmVxdWlyZWQ6IHRydWUKcGFja2FnZV91cGRhdGU6IHRydWUKcGFja2FnZV91cGdyYWRlOiB0cnVlCnBhY2thZ2VzOiBbYnVpbGQtZXNzZW50aWFsLCBjdXJsLCBkZWZhdWx0LWpkaywgZGlyZW52LCBmaWdsZXQsIGpxLCBsaWJiejItZGV2LCBsaWJmZmktZGV2LCBsaWJsem1hLWRldiwgbGlibmN1cnNlc3c1LWRldiwgbGlicmVhZGxpbmUtZGV2LCBsaWJzcWxpdGUzLWRldiwgbGlic3NsLWRldiwgbGlieG1sMi1kZXYsIGxpYnhtbHNlYzEtZGV2LCBuZXQtdG9vbHMsIHRrLWRldiwgdW56aXAsIHh6LXV0aWxzLCB6bGliMWctZGV2XQpydW5jbWQ6Ci0gW3J1bnVzZXIsIC1sLCB1YnVudHUsIC1jLCAnYmFzaCAtYyAiJChjdXJsIC1mc1NMIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9vaG15YmFzaC9vaC1teS1iYXNoL21hc3Rlci90b29scy9pbnN0YWxsLnNoKSInXQotIFtydW51c2VyLCAtbCwgdWJ1bnR1LCAtYywgZWNobyAiIiA+PiAkSE9NRS8ub2gtbXktYmFzaC9jdXN0b20vZXhhbXBsZS5zaF0KLSBbcnVudXNlciwgLWwsIHVidW50dSwgLWMsIGVjaG8gT1NIX1RIRU1FPSJ6b3JrIiA+PiAkSE9NRS8ub2gtbXktYmFzaC9jdXN0b20vZXhhbXBsZS5zaF0KLSBbcnVudXNlciwgLWwsIHVidW50dSwgLWMsIGVjaG8gIiIgPj4gJEhPTUUvLmJhc2hyY10KLSBbcnVudXNlciwgLWwsIHVidW50dSwgLWMsIGVjaG8gImV2YWwgXCJcJChkaXJlbnYgaG9vayBiYXNoKVwiIiA+PiAkSE9NRS8uYmFzaHJjXQotIFtydW51c2VyLCAtbCwgdWJ1bnR1LCAtYywgJ2dpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vYW55ZW52L2FueWVudiB+Ly5hbnllbnYnXQotIFtydW51c2VyLCAtbCwgdWJ1bnR1LCAtYywgZWNobyAiIiA+PiAkSE9NRS8uYmFzaHJjXQotIFtydW51c2VyLCAtbCwgdWJ1bnR1LCAtYywgJ2VjaG8gZXhwb3J0IFBBVEg9XCRIT01FLy5hbnllbnYvYmluOlwkUEFUSCA+PiAkSE9NRS8uYmFzaHJjJ10KLSBbcnVudXNlciwgLWwsIHVidW50dSwgLWMsIGVjaG8gImV2YWwgXCJcJChhbnllbnYgaW5pdCAtKVwiIiA+PiAkSE9NRS8uYmFzaHJjXQotIFtydW51c2VyLCAtbCwgdWJ1bnR1LCAtYywgJEhPTUUvLmFueWVudi9iaW4vYW55ZW52IGluc3RhbGwgLS1mb3JjZS1pbml0XQotIFtydW51c2VyLCAtbCwgdWJ1bnR1LCAtYywgJEhPTUUvLmFueWVudi9iaW4vYW55ZW52IGluc3RhbGwgamVudl0KLSBbcnVudXNlciwgLWwsIHVidW50dSwgLWMsICRIT01FLy5hbnllbnYvYmluL2FueWVudiBpbnN0YWxsIG5vZGVudl0KLSBbcnVudXNlciwgLWwsIHVidW50dSwgLWMsICRIT01FLy5hbnllbnYvYmluL2FueWVudiBpbnN0YWxsIGdvZW52XQotIFtydW51c2VyLCAtbCwgdWJ1bnR1LCAtYywgJEhPTUUvLmFueWVudi9iaW4vYW55ZW52IGluc3RhbGwgcHllbnZdCi0gW3J1bnVzZXIsIC1sLCB1YnVudHUsIC1jLCAnY3VybCAtc0xTIGh0dHBzOi8vZ2V0LmFya2FkZS5kZXYgfCBzdWRvIHNoJ10KLSBbcnVudXNlciwgLWwsIHVidW50dSwgLWMsIGVjaG8gIiIgPj4gJEhPTUUvLmJhc2hyY10KLSBbcnVudXNlciwgLWwsIHVidW50dSwgLWMsICdlY2hvIGV4cG9ydCBQQVRIPVwkSE9NRS8uYXJrYWRlL2JpbjpcJFBBVEggPj4gJEhPTUUvLmJhc2hyYyddCi0gW3J1bnVzZXIsIC1sLCB1YnVudHUsIC1jLCBhcmthZGUgZ2V0IGszc3VwXQotIFtydW51c2VyLCAtbCwgdWJ1bnR1LCAtYywgbWtkaXIgJEhPTUUvLmt1YmVdCi0gW3J1bnVzZXIsIC1sLCB1YnVudHUsIC1jLCAkSE9NRS8uYXJrYWRlL2Jpbi9rM3N1cCBpbnN0YWxsIC0tY29udGV4dCBkZWZhdWx0IC0tazNzLWV4dHJhLWFyZ3MgIi0tZGlzYWJsZSB0cmFlZmlrIiAtLWxvY2FsIC0tbG9jYWwtcGF0aCAkSE9NRS8ua3ViZS9jb25maWcgLS11c2VyIHVidW50dV0KdXNlcnM6Ci0gZGVmYXVsdAotIGdyb3Vwczogc3VkbwogIG5hbWU6IHVidW50dQogIHNoZWxsOiAvYmluL2Jhc2gKICBzc2hfYXV0aG9yaXplZF9rZXlzOiBbc3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCZ1FDZFMwZ0Z2czMyUW00NTNQWjcrN1p1WWtzeC9OTjNQWUdiOURqWHl3bVhMQVRBYzRNeW5QdVpKWHk4ck1GWkoyVWdoWWNYTDdmNUlZcThndVZwUmIwMjFhbkRQZnNpSTF3bDNRenlyS3lCc1hRRHBTa2NRS3NqZEM3M3YwYkRWdlNIY1kwankvQ3NiQW5yQXJydTBtbVpMRTJjSnJxbHk4d0habVFYZm1NZmFwdm9jZEg2WTRHSzJHbGp4TkZDRTZHSWdmZUFCSWFjdGpGRUQ3YUVWNzBQRXhWMXRwT3UwNk1CQk1Ca2h5V3JEN0JhTXVMcENoUHlhSTAwbEx6cG9PVnRZdUp6bUhTbnl3Z2hSWGQ4YnNYdkNMRWs0MmNXRVBhV3lkdEVxQmVKekxZa1Y1NW4rREZ2aDVDU3Y3VnpMcVZVcWxXSWozN3ZYbjN5Z3lsYmNPckhqMytDdTdraDFCZlppS0laZG11dEVqdjlBa0ZBRzlGS3lvRExGcnNXcHMvODllSUhKTGNYM3BabmEvZ21yem1KZHNYajJwTzVJZ0ZtK2VJZkxGV0EzTDcycWx3L3V6NFRCeWlSK01odVdTNzV6UVZ2MzdQZklhbVJ5eU9VMldZSFA4VzJvVTA2emF5UDFBTVRTLzFhNlhRSFdXRjJBQyttVXpnOFUzWXNTOGs9IG1qc2Nob2NrQG9yeXA3XQogIHN1ZG86IEFMTD0oQUxMKSBOT1BBU1NXRDpBTEwK",
            "content_base64sha256": "uJpTI5mlvo/j3GY7AQWoA9rTY+AW7KTBWBDIYua9qk0=",
            "content_base64sha512": "kmcvaqsevpzR7XqB4qznRPnyTtZ7z2K1YmY4gMHhl0x97Nus0e6eObPTBPNXGO3AkNP7q7KAmR71Hhcdek5fFA==",
            "content_md5": "5778ae68fc57c5c0441297c0d9a1e5b8",
            "content_sha1": "b95ce0cacfe52dc6b0e9022d5c2c3e24cf84c43f",
            "content_sha256": "b89a532399a5be8fe3dc663b0105a803dad363e016eca4c15810c862e6bdaa4d",
            "content_sha512": "92672f6aab1ebe9cd1ed7a81e2ace744f9f24ed67bcf62b562663880c1e1974c7decdbacd1ee9e39b3d304f35718edc090d3fbabb280991ef51e171d7a4e5f14",
            "filename": "cloud-config.yaml",
            "id": "b95ce0cacfe52dc6b0e9022d5c2c3e24cf84c43f"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "multipass_instance",
      "name": "cloud_instance_data_source",
      "provider": "provider[\"registry.terraform.io/larstobi/multipass\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "image": "Ubuntu 22.04.2 LTS",
            "image_hash": "fe102bfb3d3d (Ubuntu 22.04 LTS)",
            "ipv4": "10.159.189.105",
            "name": "timestep-ai",
            "state": "Running"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "cloud_init_config_resource",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#cloud-config\ndisable_root: true\npackage_reboot_if_required: true\npackage_update: true\npackage_upgrade: true\npackages: [build-essential, curl, default-jdk, direnv, figlet, jq, libbz2-dev, libffi-dev, liblzma-dev, libncursesw5-dev, libreadline-dev, libsqlite3-dev, libssl-dev, libxml2-dev, libxmlsec1-dev, net-tools, tk-dev, unzip, xz-utils, zlib1g-dev]\nruncmd:\n- [runuser, -l, ubuntu, -c, 'bash -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)\"']\n- [runuser, -l, ubuntu, -c, echo \"\" \u003e\u003e $HOME/.oh-my-bash/custom/example.sh]\n- [runuser, -l, ubuntu, -c, echo OSH_THEME=\"zork\" \u003e\u003e $HOME/.oh-my-bash/custom/example.sh]\n- [runuser, -l, ubuntu, -c, echo \"\" \u003e\u003e $HOME/.bashrc]\n- [runuser, -l, ubuntu, -c, echo \"eval \\\"\\$(direnv hook bash)\\\"\" \u003e\u003e $HOME/.bashrc]\n- [runuser, -l, ubuntu, -c, 'git clone https://github.com/anyenv/anyenv ~/.anyenv']\n- [runuser, -l, ubuntu, -c, echo \"\" \u003e\u003e $HOME/.bashrc]\n- [runuser, -l, ubuntu, -c, 'echo export PATH=\\$HOME/.anyenv/bin:\\$PATH \u003e\u003e $HOME/.bashrc']\n- [runuser, -l, ubuntu, -c, echo \"eval \\\"\\$(anyenv init -)\\\"\" \u003e\u003e $HOME/.bashrc]\n- [runuser, -l, ubuntu, -c, $HOME/.anyenv/bin/anyenv install --force-init]\n- [runuser, -l, ubuntu, -c, $HOME/.anyenv/bin/anyenv install jenv]\n- [runuser, -l, ubuntu, -c, $HOME/.anyenv/bin/anyenv install nodenv]\n- [runuser, -l, ubuntu, -c, $HOME/.anyenv/bin/anyenv install goenv]\n- [runuser, -l, ubuntu, -c, $HOME/.anyenv/bin/anyenv install pyenv]\n- [runuser, -l, ubuntu, -c, 'curl -sLS https://get.arkade.dev | sudo sh']\n- [runuser, -l, ubuntu, -c, echo \"\" \u003e\u003e $HOME/.bashrc]\n- [runuser, -l, ubuntu, -c, 'echo export PATH=\\$HOME/.arkade/bin:\\$PATH \u003e\u003e $HOME/.bashrc']\n- [runuser, -l, ubuntu, -c, arkade get k3sup]\n- [runuser, -l, ubuntu, -c, mkdir $HOME/.kube]\n- [runuser, -l, ubuntu, -c, $HOME/.arkade/bin/k3sup install --context default --k3s-extra-args \"--disable traefik\" --local --local-path $HOME/.kube/config --user ubuntu]\nusers:\n- default\n- groups: sudo\n  name: ubuntu\n  shell: /bin/bash\n  ssh_authorized_keys: [ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCdS0gFvs32Qm453PZ7+7ZuYksx/NN3PYGb9DjXywmXLATAc4MynPuZJXy8rMFZJ2UghYcXL7f5IYq8guVpRb021anDPfsiI1wl3QzyrKyBsXQDpSkcQKsjdC73v0bDVvSHcY0jy/CsbAnrArru0mmZLE2cJrqly8wHZmQXfmMfapvocdH6Y4GK2GljxNFCE6GIgfeABIactjFED7aEV70PExV1tpOu06MBBMBkhyWrD7BaMuLpChPyaI00lLzpoOVtYuJzmHSnywghRXd8bsXvCLEk42cWEPaWydtEqBeJzLYkV55n+DFvh5CSv7VzLqVUqlWIj37vXn3ygylbcOrHj3+Cu7kh1BfZiKIZdmutEjv9AkFAG9FKyoDLFrsWps/89eIHJLcX3pZna/gmrzmJdsXj2pO5IgFm+eIfLFWA3L72qlw/uz4TByiR+MhuWS75zQVv37PfIamRyyOU2WYHP8W2oU06zayP1AMTS/1a6XQHWWF2AC+mUzg8U3YsS8k= mjschock@oryp7]\n  sudo: ALL=(ALL) NOPASSWD:ALL\n",
            "content_base64": null,
            "content_base64sha256": "uJpTI5mlvo/j3GY7AQWoA9rTY+AW7KTBWBDIYua9qk0=",
            "content_base64sha512": "kmcvaqsevpzR7XqB4qznRPnyTtZ7z2K1YmY4gMHhl0x97Nus0e6eObPTBPNXGO3AkNP7q7KAmR71Hhcdek5fFA==",
            "content_md5": "5778ae68fc57c5c0441297c0d9a1e5b8",
            "content_sha1": "b95ce0cacfe52dc6b0e9022d5c2c3e24cf84c43f",
            "content_sha256": "b89a532399a5be8fe3dc663b0105a803dad363e016eca4c15810c862e6bdaa4d",
            "content_sha512": "92672f6aab1ebe9cd1ed7a81e2ace744f9f24ed67bcf62b562663880c1e1974c7decdbacd1ee9e39b3d304f35718edc090d3fbabb280991ef51e171d7a4e5f14",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "cloud-config.yaml",
            "id": "b95ce0cacfe52dc6b0e9022d5c2c3e24cf84c43f",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "multipass_instance",
      "name": "cloud_instance_resource",
      "provider": "provider[\"registry.terraform.io/larstobi/multipass\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cloudinit_file": "cloud-config.yaml",
            "cpus": 1,
            "disk": "10G",
            "image": "22.04",
            "memory": null,
            "name": "timestep-ai"
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.cloud_init_config_data_source",
            "local_file.cloud_init_config_resource"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
