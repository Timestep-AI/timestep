{"type": "agent_updated_stream_event", "timestamp": null, "new_agent": {"name": "Main agent", "handoff_description": null, "tools": [], "mcp_servers": [], "mcp_config": {}, "instructions": "You are a general assistant. For weather questions, call the weather agent tool with a short input string and then answer.", "prompt": null, "handoffs": [{"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-c16ab744e05040f7802f5cb7e2d33", "created_at": 1759161663.4588802, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": null, "user": null}, "sequence_number": 0, "type": "response.created"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "", "call_id": "call_42002f9a68b64a6d83e03dba", "name": "transfer_to_weather_agent", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 1, "type": "response.output_item.added"}}
{"type": "raw_response_event", "timestamp": null, "data": {"delta": "{}", "item_id": "__fake_id__", "output_index": 0, "sequence_number": 2, "type": "response.function_call_arguments.delta"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Main agent", "handoff_description": null, "tools": [], "mcp_servers": [], "mcp_config": {}, "instructions": "You are a general assistant. For weather questions, call the weather agent tool with a short input string and then answer.", "prompt": null, "handoffs": [{"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"arguments": "{}", "call_id": "call_42002f9a68b64a6d83e03dba", "name": "transfer_to_weather_agent", "type": "function_call", "id": "__fake_id__", "status": null}, "type": "tool_call_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "{}", "call_id": "call_42002f9a68b64a6d83e03dba", "name": "transfer_to_weather_agent", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 3, "type": "response.output_item.done"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-c16ab744e05040f7802f5cb7e2d33", "created_at": 1759161663.4588802, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [{"arguments": "{}", "call_id": "call_42002f9a68b64a6d83e03dba", "name": "transfer_to_weather_agent", "type": "function_call", "id": "__fake_id__", "status": null}], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": {"input_tokens": 147, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 128, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 275}, "user": null}, "sequence_number": 4, "type": "response.completed"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Main agent", "handoff_description": null, "tools": [], "mcp_servers": [], "mcp_config": {}, "instructions": "You are a general assistant. For weather questions, call the weather agent tool with a short input string and then answer.", "prompt": null, "handoffs": [{"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"arguments": "{}", "call_id": "call_42002f9a68b64a6d83e03dba", "name": "transfer_to_weather_agent", "type": "function_call", "id": "__fake_id__", "status": null}, "type": "handoff_call_item"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Main agent", "handoff_description": null, "tools": [], "mcp_servers": [], "mcp_config": {}, "instructions": "You are a general assistant. For weather questions, call the weather agent tool with a short input string and then answer.", "prompt": null, "handoffs": [{"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"call_id": "call_42002f9a68b64a6d83e03dba", "output": "{\"assistant\": \"Weather agent\"}", "type": "function_call_output"}, "source_agent": {"name": "Main agent", "handoff_description": null, "tools": [], "mcp_servers": [], "mcp_config": {}, "instructions": "You are a general assistant. For weather questions, call the weather agent tool with a short input string and then answer.", "prompt": null, "handoffs": [{"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "target_agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "type": "handoff_output_item"}}
{"type": "agent_updated_stream_event", "timestamp": null, "new_agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-da5c4008a8ea432b9a17123c8b5f2", "created_at": 1759161665.2734094, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": null, "user": null}, "sequence_number": 0, "type": "response.created"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "", "call_id": "call_20139ba3e03340a0b203a163", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 1, "type": "response.output_item.added"}}
{"type": "raw_response_event", "timestamp": null, "data": {"delta": "{\"city\": \"San Francisco\"}", "item_id": "__fake_id__", "output_index": 0, "sequence_number": 2, "type": "response.function_call_arguments.delta"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"arguments": "{\"city\": \"San Francisco\"}", "call_id": "call_20139ba3e03340a0b203a163", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "type": "tool_call_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "{\"city\": \"San Francisco\"}", "call_id": "call_20139ba3e03340a0b203a163", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 3, "type": "response.output_item.done"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-da5c4008a8ea432b9a17123c8b5f2", "created_at": 1759161665.2734094, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [{"arguments": "{\"city\": \"San Francisco\"}", "call_id": "call_20139ba3e03340a0b203a163", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": {"input_tokens": 173, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 88, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 261}, "user": null}, "sequence_number": 4, "type": "response.completed"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"call_id": "call_20139ba3e03340a0b203a163", "output": "The weather in San Francisco is sunny.", "type": "function_call_output"}, "output": "The weather in San Francisco is sunny.", "type": "tool_call_output_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-ecc9508dff0343b790c4f8c57b0cb", "created_at": 1759161666.7182517, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": null, "user": null}, "sequence_number": 0, "type": "response.created"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "", "call_id": "call_3db14d8d6ddb45178d2c5850", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 1, "type": "response.output_item.added"}}
{"type": "raw_response_event", "timestamp": null, "data": {"delta": "{\"city\": \"Oakland\"}", "item_id": "__fake_id__", "output_index": 0, "sequence_number": 2, "type": "response.function_call_arguments.delta"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"arguments": "{\"city\": \"Oakland\"}", "call_id": "call_3db14d8d6ddb45178d2c5850", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "type": "tool_call_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "{\"city\": \"Oakland\"}", "call_id": "call_3db14d8d6ddb45178d2c5850", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 3, "type": "response.output_item.done"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-ecc9508dff0343b790c4f8c57b0cb", "created_at": 1759161666.7182517, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [{"arguments": "{\"city\": \"Oakland\"}", "call_id": "call_3db14d8d6ddb45178d2c5850", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": {"input_tokens": 214, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 40, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 254}, "user": null}, "sequence_number": 4, "type": "response.completed"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"call_id": "call_3db14d8d6ddb45178d2c5850", "output": "The weather in Oakland is sunny.", "type": "function_call_output"}, "output": "The weather in Oakland is sunny.", "type": "tool_call_output_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-592f8c83cea54cc5a86671fb57988", "created_at": 1759161667.7104058, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": null, "user": null}, "sequence_number": 0, "type": "response.created"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "", "call_id": "call_f777e6b90d2d4aefa8045461", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 1, "type": "response.output_item.added"}}
{"type": "raw_response_event", "timestamp": null, "data": {"delta": "{\"city\": \"San Francisco\"}", "item_id": "__fake_id__", "output_index": 0, "sequence_number": 2, "type": "response.function_call_arguments.delta"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"arguments": "{\"city\": \"San Francisco\"}", "call_id": "call_f777e6b90d2d4aefa8045461", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "type": "tool_call_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "{\"city\": \"San Francisco\"}", "call_id": "call_f777e6b90d2d4aefa8045461", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 3, "type": "response.output_item.done"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-592f8c83cea54cc5a86671fb57988", "created_at": 1759161667.7104058, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [{"arguments": "{\"city\": \"San Francisco\"}", "call_id": "call_f777e6b90d2d4aefa8045461", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": {"input_tokens": 254, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 147, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 401}, "user": null}, "sequence_number": 4, "type": "response.completed"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"call_id": "call_f777e6b90d2d4aefa8045461", "output": "The weather in San Francisco is sunny.", "type": "function_call_output"}, "output": "The weather in San Francisco is sunny.", "type": "tool_call_output_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-18e5c53a496c4952b5bfc52e6b9e8", "created_at": 1759161669.3631437, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": null, "user": null}, "sequence_number": 0, "type": "response.created"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"id": "__fake_id__", "content": [], "role": "assistant", "status": "in_progress", "type": "message"}, "output_index": 0, "sequence_number": 1, "type": "response.output_item.added"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "item_id": "__fake_id__", "output_index": 0, "part": {"annotations": [], "text": "", "type": "output_text", "logprobs": null}, "sequence_number": 2, "type": "response.content_part.added"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "Here", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 3, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "\u2019s", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 4, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " the", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 5, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " latest", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 6, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " weather", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 7, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " information", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 8, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " for", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 9, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " the", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 10, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " two", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 11, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " cities", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 12, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ":\n\n", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 13, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "|", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 14, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " City", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 15, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "           ", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 16, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " |", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 17, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Weather", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 18, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " |", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 19, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 20, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " |\n", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 21, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "|", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 22, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "----------------", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 23, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "-|", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 24, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "---------", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 25, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "|", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 26, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "-------------", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 27, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "|\n", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 28, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "|", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 29, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " San", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 30, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "\u202f", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 31, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "Franc", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 32, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "isco", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 33, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "  ", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 34, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " |", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 35, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Sunny", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 36, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "  ", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 37, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " |", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 38, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " *(", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 39, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 40, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " not", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 41, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " provided", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 42, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " by", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 43, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " the", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 44, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " source", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 45, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ")*", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 46, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " |\n", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 47, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "|", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 48, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Oakland", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 49, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "        ", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 50, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " |", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 51, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Sunny", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 52, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "  ", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 53, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " |", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 54, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " *(", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 55, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 56, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " not", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 57, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " provided", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 58, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " by", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 59, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " the", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 60, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " source", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 61, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ")*", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 62, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " |\n\n", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 63, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "Both", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 64, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " San", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 65, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "\u202f", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 66, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "Franc", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 67, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "isco", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 68, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " and", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 69, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Oakland", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 70, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " are", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 71, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " currently", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 72, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " experiencing", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 73, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " sunny", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 74, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " conditions", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 75, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ".", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 76, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " The", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 77, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " tool", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 78, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " I", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 79, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " used", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 80, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " reports", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 81, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " only", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 82, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " the", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 83, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " weather", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 84, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " condition", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 85, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " and", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 86, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " does", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 87, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " not", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 88, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " include", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 89, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 90, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " data", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 91, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ",", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 92, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " so", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 93, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " I", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 94, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "\u2019m", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 95, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " unable", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 96, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " to", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 97, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " give", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 98, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " exact", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 99, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 100, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " readings", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 101, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " at", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 102, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " this", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 103, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " time", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 104, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ".", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 105, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " If", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 106, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " you", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 107, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " need", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 108, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " precise", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 109, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 110, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " values", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 111, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ",", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 112, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " let", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 113, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " me", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 114, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " know", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 115, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " and", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 116, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " I", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 117, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " can", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 118, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " look", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 119, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " them", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 120, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " up", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 121, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " from", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 122, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " a", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 123, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " more", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 124, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " detailed", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 125, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " source", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 126, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ".", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 127, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "item_id": "__fake_id__", "output_index": 0, "part": {"annotations": [], "text": "Here\u2019s the latest weather information for the two cities:\n\n| City            | Weather | Temperature |\n|-----------------|---------|-------------|\n| San\u202fFrancisco   | Sunny   | *(temperature not provided by the source)* |\n| Oakland         | Sunny   | *(temperature not provided by the source)* |\n\nBoth San\u202fFrancisco and Oakland are currently experiencing sunny conditions. The tool I used reports only the weather condition and does not include temperature data, so I\u2019m unable to give exact temperature readings at this time. If you need precise temperature values, let me know and I can look them up from a more detailed source.", "type": "output_text", "logprobs": null}, "sequence_number": 128, "type": "response.content_part.done"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"id": "__fake_id__", "content": [{"annotations": [], "text": "Here\u2019s the latest weather information for the two cities:\n\n| City            | Weather | Temperature |\n|-----------------|---------|-------------|\n| San\u202fFrancisco   | Sunny   | *(temperature not provided by the source)* |\n| Oakland         | Sunny   | *(temperature not provided by the source)* |\n\nBoth San\u202fFrancisco and Oakland are currently experiencing sunny conditions. The tool I used reports only the weather condition and does not include temperature data, so I\u2019m unable to give exact temperature readings at this time. If you need precise temperature values, let me know and I can look them up from a more detailed source.", "type": "output_text", "logprobs": null}], "role": "assistant", "status": "completed", "type": "message"}, "output_index": 0, "sequence_number": 129, "type": "response.output_item.done"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-18e5c53a496c4952b5bfc52e6b9e8", "created_at": 1759161669.3631437, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [{"id": "__fake_id__", "content": [{"annotations": [], "text": "Here\u2019s the latest weather information for the two cities:\n\n| City            | Weather | Temperature |\n|-----------------|---------|-------------|\n| San\u202fFrancisco   | Sunny   | *(temperature not provided by the source)* |\n| Oakland         | Sunny   | *(temperature not provided by the source)* |\n\nBoth San\u202fFrancisco and Oakland are currently experiencing sunny conditions. The tool I used reports only the weather condition and does not include temperature data, so I\u2019m unable to give exact temperature readings at this time. If you need precise temperature values, let me know and I can look them up from a more detailed source.", "type": "output_text", "logprobs": null}], "role": "assistant", "status": "completed", "type": "message"}], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": {"input_tokens": 295, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 243, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 538}, "user": null}, "sequence_number": 130, "type": "response.completed"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"id": "__fake_id__", "content": [{"annotations": [], "text": "Here\u2019s the latest weather information for the two cities:\n\n| City            | Weather | Temperature |\n|-----------------|---------|-------------|\n| San\u202fFrancisco   | Sunny   | *(temperature not provided by the source)* |\n| Oakland         | Sunny   | *(temperature not provided by the source)* |\n\nBoth San\u202fFrancisco and Oakland are currently experiencing sunny conditions. The tool I used reports only the weather condition and does not include temperature data, so I\u2019m unable to give exact temperature readings at this time. If you need precise temperature values, let me know and I can look them up from a more detailed source.", "type": "output_text", "logprobs": null}], "role": "assistant", "status": "completed", "type": "message"}, "type": "message_output_item"}}
