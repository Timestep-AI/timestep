{"type": "agent_updated_stream_event", "timestamp": null, "new_agent": {"name": "Main agent", "handoff_description": null, "tools": [], "mcp_servers": [], "mcp_config": {}, "instructions": "You are a general assistant. For weather questions, call the weather agent tool with a short input string and then answer.", "prompt": null, "handoffs": [{"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-4cb549c6bf044bc58c1b39ec7d542", "created_at": 1759191761.596035, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": null, "user": null}, "sequence_number": 0, "type": "response.created"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "", "call_id": "call_ab0aa24fc6df45e789538014", "name": "transfer_to_weather_agent", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 1, "type": "response.output_item.added"}}
{"type": "raw_response_event", "timestamp": null, "data": {"delta": "{}", "item_id": "__fake_id__", "output_index": 0, "sequence_number": 2, "type": "response.function_call_arguments.delta"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Main agent", "handoff_description": null, "tools": [], "mcp_servers": [], "mcp_config": {}, "instructions": "You are a general assistant. For weather questions, call the weather agent tool with a short input string and then answer.", "prompt": null, "handoffs": [{"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"arguments": "{}", "call_id": "call_ab0aa24fc6df45e789538014", "name": "transfer_to_weather_agent", "type": "function_call", "id": "__fake_id__", "status": null}, "type": "tool_call_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "{}", "call_id": "call_ab0aa24fc6df45e789538014", "name": "transfer_to_weather_agent", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 3, "type": "response.output_item.done"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-4cb549c6bf044bc58c1b39ec7d542", "created_at": 1759191761.596035, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [{"arguments": "{}", "call_id": "call_ab0aa24fc6df45e789538014", "name": "transfer_to_weather_agent", "type": "function_call", "id": "__fake_id__", "status": null}], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": {"input_tokens": 147, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 248, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 395}, "user": null}, "sequence_number": 4, "type": "response.completed"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Main agent", "handoff_description": null, "tools": [], "mcp_servers": [], "mcp_config": {}, "instructions": "You are a general assistant. For weather questions, call the weather agent tool with a short input string and then answer.", "prompt": null, "handoffs": [{"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"arguments": "{}", "call_id": "call_ab0aa24fc6df45e789538014", "name": "transfer_to_weather_agent", "type": "function_call", "id": "__fake_id__", "status": null}, "type": "handoff_call_item"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Main agent", "handoff_description": null, "tools": [], "mcp_servers": [], "mcp_config": {}, "instructions": "You are a general assistant. For weather questions, call the weather agent tool with a short input string and then answer.", "prompt": null, "handoffs": [{"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"call_id": "call_ab0aa24fc6df45e789538014", "output": "{\"assistant\": \"Weather agent\"}", "type": "function_call_output"}, "source_agent": {"name": "Main agent", "handoff_description": null, "tools": [], "mcp_servers": [], "mcp_config": {}, "instructions": "You are a general assistant. For weather questions, call the weather agent tool with a short input string and then answer.", "prompt": null, "handoffs": [{"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "target_agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "type": "handoff_output_item"}}
{"type": "agent_updated_stream_event", "timestamp": null, "new_agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-a011a72a584e4b9e8197e52045a7a", "created_at": 1759191764.324658, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": null, "user": null}, "sequence_number": 0, "type": "response.created"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "", "call_id": "call_18696b933e6249eca5d2c213", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 1, "type": "response.output_item.added"}}
{"type": "raw_response_event", "timestamp": null, "data": {"delta": "{\"city\": \"San Francisco\"}", "item_id": "__fake_id__", "output_index": 0, "sequence_number": 2, "type": "response.function_call_arguments.delta"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"arguments": "{\"city\": \"San Francisco\"}", "call_id": "call_18696b933e6249eca5d2c213", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "type": "tool_call_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "{\"city\": \"San Francisco\"}", "call_id": "call_18696b933e6249eca5d2c213", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 3, "type": "response.output_item.done"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-a011a72a584e4b9e8197e52045a7a", "created_at": 1759191764.324658, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [{"arguments": "{\"city\": \"San Francisco\"}", "call_id": "call_18696b933e6249eca5d2c213", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": {"input_tokens": 173, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 49, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 222}, "user": null}, "sequence_number": 4, "type": "response.completed"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"call_id": "call_18696b933e6249eca5d2c213", "output": "The weather in San Francisco is sunny.", "type": "function_call_output"}, "output": "The weather in San Francisco is sunny.", "type": "tool_call_output_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-8835c67b9cf042d3a415b01fa4b4e", "created_at": 1759191765.2145312, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": null, "user": null}, "sequence_number": 0, "type": "response.created"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "", "call_id": "call_752a1caceb4f41649ece6808", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 1, "type": "response.output_item.added"}}
{"type": "raw_response_event", "timestamp": null, "data": {"delta": "{\"city\": \"Oakland\"}", "item_id": "__fake_id__", "output_index": 0, "sequence_number": 2, "type": "response.function_call_arguments.delta"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"arguments": "{\"city\": \"Oakland\"}", "call_id": "call_752a1caceb4f41649ece6808", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "type": "tool_call_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"arguments": "{\"city\": \"Oakland\"}", "call_id": "call_752a1caceb4f41649ece6808", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}, "output_index": 0, "sequence_number": 3, "type": "response.output_item.done"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-8835c67b9cf042d3a415b01fa4b4e", "created_at": 1759191765.2145312, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [{"arguments": "{\"city\": \"Oakland\"}", "call_id": "call_752a1caceb4f41649ece6808", "name": "get_weather", "type": "function_call", "id": "__fake_id__", "status": null}], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": {"input_tokens": 214, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 78, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 292}, "user": null}, "sequence_number": 4, "type": "response.completed"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"call_id": "call_752a1caceb4f41649ece6808", "output": "The weather in Oakland is sunny.", "type": "function_call_output"}, "output": "The weather in Oakland is sunny.", "type": "tool_call_output_item"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-7e5f62f6e37f4d1982773a7581b09", "created_at": 1759191766.4890256, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": null, "user": null}, "sequence_number": 0, "type": "response.created"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"id": "__fake_id__", "content": [], "role": "assistant", "status": "in_progress", "type": "message"}, "output_index": 0, "sequence_number": 1, "type": "response.output_item.added"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "item_id": "__fake_id__", "output_index": 0, "part": {"annotations": [], "text": "", "type": "output_text", "logprobs": null}, "sequence_number": 2, "type": "response.content_part.added"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "**", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 3, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "San", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 4, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "\u202f", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 5, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "Franc", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 6, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "isco", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 7, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "**", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 8, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "  \n", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 9, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "-", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 10, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Weather", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 11, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ":", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 12, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Sunny", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 13, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "  \n", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 14, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "-", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 15, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 16, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ":", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 17, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " *", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 18, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "No", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 19, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 20, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " data", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 21, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " available", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 22, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " from", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 23, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " the", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 24, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " tool", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 25, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ".*\n\n", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 26, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "**", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 27, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "Oak", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 28, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "land", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 29, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "**", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 30, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "  \n", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 31, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "-", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 32, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Weather", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 33, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ":", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 34, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Sunny", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 35, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "  \n", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 36, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "-", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 37, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " Temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 38, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ":", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 39, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " *", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 40, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "No", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 41, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 42, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " data", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 43, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " available", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 44, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " from", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 45, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " the", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 46, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " tool", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 47, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ".*\n\n", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 48, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "The", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 49, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " available", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 50, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " weather", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 51, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " tool", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 52, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " returned", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 53, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " only", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 54, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " a", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 55, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " brief", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 56, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " description", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 57, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " (", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 58, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "sun", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 59, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": "ny", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 60, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ")", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 61, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " for", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 62, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " each", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 63, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " city", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 64, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " and", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 65, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " did", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 66, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " not", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 67, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " provide", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 68, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 69, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " information", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 70, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ".", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 71, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " If", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 72, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " you", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 73, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " need", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 74, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " current", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 75, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " temperature", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 76, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " values", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 77, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ",", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 78, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " you", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 79, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " may", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 80, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " want", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 81, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " to", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 82, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " check", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 83, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " a", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 84, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " dedicated", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 85, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " weather", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 86, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " service", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 87, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " or", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 88, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " let", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 89, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " me", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 90, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " know", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 91, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " another", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 92, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " source", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 93, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " I", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 94, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " can", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 95, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": " query", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 96, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "delta": ".", "item_id": "__fake_id__", "logprobs": [], "output_index": 0, "sequence_number": 97, "type": "response.output_text.delta"}}
{"type": "raw_response_event", "timestamp": null, "data": {"content_index": 0, "item_id": "__fake_id__", "output_index": 0, "part": {"annotations": [], "text": "**San\u202fFrancisco**  \n- Weather: Sunny  \n- Temperature: *No temperature data available from the tool.*\n\n**Oakland**  \n- Weather: Sunny  \n- Temperature: *No temperature data available from the tool.*\n\nThe available weather tool returned only a brief description (sunny) for each city and did not provide temperature information. If you need current temperature values, you may want to check a dedicated weather service or let me know another source I can query.", "type": "output_text", "logprobs": null}, "sequence_number": 98, "type": "response.content_part.done"}}
{"type": "raw_response_event", "timestamp": null, "data": {"item": {"id": "__fake_id__", "content": [{"annotations": [], "text": "**San\u202fFrancisco**  \n- Weather: Sunny  \n- Temperature: *No temperature data available from the tool.*\n\n**Oakland**  \n- Weather: Sunny  \n- Temperature: *No temperature data available from the tool.*\n\nThe available weather tool returned only a brief description (sunny) for each city and did not provide temperature information. If you need current temperature values, you may want to check a dedicated weather service or let me know another source I can query.", "type": "output_text", "logprobs": null}], "role": "assistant", "status": "completed", "type": "message"}, "output_index": 0, "sequence_number": 99, "type": "response.output_item.done"}}
{"type": "raw_response_event", "timestamp": null, "data": {"response": {"id": "chatcmpl-7e5f62f6e37f4d1982773a7581b09", "created_at": 1759191766.4890256, "error": null, "incomplete_details": null, "instructions": null, "metadata": null, "model": "gpt-oss:120b-cloud", "object": "response", "output": [{"id": "__fake_id__", "content": [{"annotations": [], "text": "**San\u202fFrancisco**  \n- Weather: Sunny  \n- Temperature: *No temperature data available from the tool.*\n\n**Oakland**  \n- Weather: Sunny  \n- Temperature: *No temperature data available from the tool.*\n\nThe available weather tool returned only a brief description (sunny) for each city and did not provide temperature information. If you need current temperature values, you may want to check a dedicated weather service or let me know another source I can query.", "type": "output_text", "logprobs": null}], "role": "assistant", "status": "completed", "type": "message"}], "parallel_tool_calls": false, "temperature": null, "tool_choice": "auto", "tools": [], "top_p": null, "background": null, "conversation": null, "max_output_tokens": null, "max_tool_calls": null, "previous_response_id": null, "prompt": null, "prompt_cache_key": null, "reasoning": null, "safety_identifier": null, "service_tier": null, "status": null, "text": null, "top_logprobs": null, "truncation": null, "usage": {"input_tokens": 254, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 255, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 509}, "user": null}, "sequence_number": 100, "type": "response.completed"}}
{"type": "run_item_stream_event", "timestamp": null, "item": {"agent": {"name": "Weather agent", "handoff_description": "Handles weather-related queries", "tools": [{"name": "get_weather", "description": "Get the weather for a given city", "params_json_schema": {"properties": {"city": {"title": "City", "type": "string"}}, "required": ["city"], "title": "get_weather_args", "type": "object", "additionalProperties": false}, "on_invoke_tool": {}, "strict_json_schema": true, "is_enabled": true}], "mcp_servers": [], "mcp_config": {}, "instructions": "You provide weather information.", "prompt": null, "handoffs": [], "model": "ollama/gpt-oss:120b-cloud", "model_settings": {"temperature": null, "top_p": null, "frequency_penalty": null, "presence_penalty": null, "tool_choice": null, "parallel_tool_calls": null, "truncation": null, "max_tokens": null, "reasoning": null, "verbosity": null, "metadata": null, "store": null, "include_usage": null, "response_include": null, "top_logprobs": null, "extra_query": null, "extra_body": null, "extra_headers": null, "extra_args": null}, "input_guardrails": [], "output_guardrails": [], "output_type": null, "hooks": null, "tool_use_behavior": "run_llm_again", "reset_tool_choice": true}, "raw_item": {"id": "__fake_id__", "content": [{"annotations": [], "text": "**San\u202fFrancisco**  \n- Weather: Sunny  \n- Temperature: *No temperature data available from the tool.*\n\n**Oakland**  \n- Weather: Sunny  \n- Temperature: *No temperature data available from the tool.*\n\nThe available weather tool returned only a brief description (sunny) for each city and did not provide temperature information. If you need current temperature values, you may want to check a dedicated weather service or let me know another source I can query.", "type": "output_text", "logprobs": null}], "role": "assistant", "status": "completed", "type": "message"}, "type": "message_output_item"}}
