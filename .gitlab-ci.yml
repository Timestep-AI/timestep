build:
  script:
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
    # - docker compose pull || true
    # - docker compose build
    # - docker compose push
    # - docker run timestep kompose convert --build local --build-command "helm package timestep-ai" --chart --file docker-compose.yml --push-image --push-command "helm push timestep-ai-0.0.1.tgz oci://registry.gitlab.com/timestep-ai/timestep" --push-image-registry registry.gitlab.com --out timestep-ai --secrets-as-files --verbose',
  stage: build

default:
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
  image: docker:${DOCKER_VERSION}
  services:
    - docker:${DOCKER_VERSION}-dind

deploy:
  script:
    - ./scripts/deploy.sh
  stage: deploy

stages:
  - build
  - deploy

variables:
  CLOUD_INSTANCE_PROVIDER: 'digitalocean'
  DOCKER_CERT_PATH: '/certs/client'
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2376
  DOCKER_REGISTRY_PASSWORD: 'glpat-u7WdRLVwfxoM2ydy4FUy'
  DOCKER_TLS_CERTDIR: '/certs'
  DOCKER_TLS_VERIFY: '1'
  DOCKER_VERSION: '20.10.16'
  HTPASSWD: 'user:$2y$05$kd9NmZYT9qykQ.do1r29V.Ag9vGk.Jp8MZqlfBdc3zfdD1qHNxyjm'
  POSTGRESQL_PASSWORD: 'prefect-rocks'
  PRIMARY_DOMAIN_NAME: 'timestep.ai'
  # PRIMARY_DOMAIN_NAME: 'timestep.local'
  REGISTRY_ADMIN_PASSWORD: 'c92d32a8-2db1-11ee-9c19-074530778110'
  SSH_PRIVATE_KEY: 'ssh_private_key_from_variables_in_gitlab'
  # STACK_ID: 'timestep.ai'

workflow:
  rules:
    # - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      - if: $CI_PIPELINE_SOURCE == "push"
