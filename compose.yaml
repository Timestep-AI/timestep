# Base compose file production deployment of reflex app with Caddy webserver
# providing TLS termination and reverse proxying.
#
# See `compose.prod.yaml` for more robust and performant deployment option.
#
# During build and run, set environment DOMAIN pointing
# to publicly accessible domain where app will be hosted
services:
  app:
    # image: local/reflex-app
    image: mschock/reflex-app
    environment:
      DB_URL: sqlite:///data/reflex.db
      # DB_URL: postgresql+psycopg2://postgres:secret@db/postgres
      # REDIS_URL: redis://redis:6379
    build:
      context: .
      dockerfile: prod.Dockerfile
    volumes:
       - db-data:/app/data
       - upload-data:/app/uploaded_files
    restart: always

  webserver:
    environment:
      DOMAIN: ${DOMAIN:-localhost}
    image: mschock/webserver
    # ports:
    #   - 443:443
    #   - 80:80  # For acme-challenge via HTTP.
    ports:
      - 2019:80
    build:
      context: .
      dockerfile: Caddy.Dockerfile
    volumes:
       - caddy-data:/root/.caddy
    restart: always
    depends_on:
      - app

volumes:
  # SQLite data
  db-data:
  # Uploaded files
  upload-data:
  # TLS keys and certificates
  caddy-data: