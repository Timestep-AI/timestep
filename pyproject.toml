[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]

[tool.coverage]
report.exclude_also = [
  '\.\.\.',
  'if typing.TYPE_CHECKING:'
]
run.source = ["timestep"]

[tool.kedro]
example_pipeline = "True"
kedro_init_version = "0.19.3"
package_name = "timestep"
project_name = "Timestep"
source_dir = "src"
tools = ['Custom Logging', 'Data Structure', 'Documentation', 'Kedro Viz', 'Linting', 'Testing']

[tool.mypy]
disallow_incomplete_defs = false
disallow_untyped_defs = false
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
files = ["src", "tests"]
python_version = "3.10"
strict = true
warn_unreachable = true
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "click"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "gymnasium.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "kedro.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "langchain.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "langchain_community.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "langchain_core.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "langchain_experimental.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "matplotlib.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "numpy"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "pandas"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "pdf2image.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "pettingzoo.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "PIL"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "plotly.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "prefect.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "seaborn.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "sklearn.*"

[[tool.mypy.overrides]]
disallow_incomplete_defs = true
disallow_untyped_defs = true
module = "timestep.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "torch"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "transformers.*"

[tool.poetry]
authors = [
  "Michael Schock <m@mjschock.com>"
]
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed"
]
description = "A great package."
homepage = "https://github.com/Timestep-AI/timestep"
license = "MIT"
name = "timestep"
readme = "README.md"
repository = "https://github.com/Timestep-AI/timestep"
version = "8.0.0"

[tool.poetry.dependencies]
accelerate = "^0.28.0"
arxiv = "^2.1.0"
bitsandbytes = "^0.43.0"
captum = "^0.7.0"
causal-conv1d = [
  {python = ">=3.10,<3.11", url = "https://github.com/Dao-AILab/causal-conv1d/releases/download/v1.2.0.post2/causal_conv1d-1.2.0.post2+cu122torch2.1cxx11abiFALSE-cp310-cp310-linux_x86_64.whl"},
  {python = ">=3.11,<3.12", url = "https://github.com/Dao-AILab/causal-conv1d/releases/download/v1.2.0.post2/causal_conv1d-1.2.0.post2+cu122torch2.1cxx11abiFALSE-cp311-cp311-linux_x86_64.whl"}
]
chatarena = "^0.1.18"
clip = {git = "https://github.com/openai/CLIP.git"}
datadreamer-dev = "^0.26.0"
datasets = "^2.18.0"
deepspeed = "^0.14.0"
diffusers = "^0.27.2"
dora-rs = "^0.3.3"
duckduckgo-search = "^5.2.2"
fiftyone = "^0.23.7"
fiftyone-db = "^1.1.2"
flash-attn = [
  {python = ">=3.10,<3.11", url = "https://github.com/Dao-AILab/flash-attention/releases/download/v2.5.6/flash_attn-2.5.6+cu122torch2.1cxx11abiFALSE-cp310-cp310-linux_x86_64.whl"},
  {python = ">=3.11,<3.12", url = "https://github.com/Dao-AILab/flash-attention/releases/download/v2.5.6/flash_attn-2.5.6+cu122torch2.1cxx11abiFALSE-cp311-cp311-linux_x86_64.whl"}
]
furo = {optional = true, version = "*"}
gorilla-cli = "^0.0.10"
gymnasium = "^0.29.1"
kedro = "^0.19.3"
kedro-datasets = {extras = ["huggingface", "matplotlib-matplotlibwriter", "pandas-csvdataset", "pandas-exceldataset", "pandas-parquetdataset", "plotly-jsondataset", "plotly-plotlydataset"], version = "^2.1.0"}
langchain = "^0.1.14"
langchain-experimental = "0.0.55"
langchain-openai = "^0.1.1"
litellm = "1.31.14"
llama-index = "^0.10.27"
llama-index-embeddings-clip = "^0.1.5"
llama-index-extractors-entity = "^0.1.2"
llama-index-extractors-marvin = "^0.1.3"
llama-index-llms-anthropic = "^0.1.10"
llama-index-llms-mistralai = "^0.1.10"
llama-index-llms-ollama = "^0.1.2"
llama-index-llms-openai = "^0.1.15"
llama-index-multi-modal-llms-ollama = "^0.1.3"
llama-index-multi-modal-llms-openai = "^0.1.5"
llama-index-readers-file = "^0.1.19"
llama-index-readers-web = "^0.1.8"
llama-index-tools-google = "^0.1.5"
llama-index-tools-wikipedia = "^0.1.3"
llama-index-vector-stores-postgres = "^0.1.5"
lxml = "^5.2.1"
mamba-ssm = [
  {python = ">=3.10,<3.11", url = "https://github.com/state-spaces/mamba/releases/download/v1.2.0.post1/mamba_ssm-1.2.0.post1+cu122torch2.1cxx11abiFALSE-cp310-cp310-linux_x86_64.whl"},
  {python = ">=3.11,<3.12", url = "https://github.com/state-spaces/mamba/releases/download/v1.2.0.post1/mamba_ssm-1.2.0.post1+cu122torch2.1cxx11abiFALSE-cp311-cp311-linux_x86_64.whl"}
]
marvin = {extras = ["video"], version = "^2.3.1"}
matplotlib = "^3.8.4"
mediawikiapi = "^1.2"
mesa = "^2.2.4"
myst_parser = {optional = true, version = "*"}
numpy = "^1.26.4"
opencv-python = "^4.9.0.80"
pdf2image = "^1.17.0"
pettingzoo = {extras = ["classic"], version = "^1.24.3"}
playwright = "^1.42.0"
prefect = "^2.16.5"
pyautogen = {extras = ["lmm"], version = "^0.2.27"}
pylatex = "^1.4.2"
pytest = {optional = true, version = ">=6"}
pytest-cov = {optional = true, version = ">=3"}
python = ">=3.10,<3.12"
python-doctr = {extras = ["torch"], version = "^0.8.1"}
pytorchvideo = "^0.1.5"
robotframework = "^7.0"
scikit-learn = "^1.4.1.post1"
scipy = "^1.12.0"
seaborn = "^0.13.2"
simple-html = "^1.2.2"
skorch = "^0.15.0"
skypilot-nightly = {extras = ["all"], version = "^1.0.0.dev20240325"}
sphinx = {optional = true, version = "*"}
sphinx-autodoc-typehints = {optional = true, version = "*"}
sphinx_copybutton = {optional = true, version = ">=0.3.0"}
supabase = "^2.4.3"
timm = "^0.9.16"
todoist-api-python = "^2.1.3"
torch = "^2.2.2"
torchaudio = "^2.2.2"
torchmultimodal-nightly = "^2024.2.23"
torchvision = "^0.17.2"
transformers = "^4.39.1"
typer = {extras = ["all"], version = "^0.9.0"}
unstructured = {extras = ["msg"], version = "^0.13.2"}
wikibase-rest-api-client = "^0.1.3"
wikipedia = "^1.4.0"
xmltodict = "^0.13.0"
yfinance = "^0.2.37"
youtube-search = "^2.1.2"

[tool.poetry.dev-dependencies]
black = "^24.3.0"
ipykernel = "^6.29.3"
ipywidgets = "^8.1.2"
isort = "^5.13.2"
jupyter = "^1.0.0"
pytest = ">= 6"
pytest-cov = ">= 3"
pytest-playwright = "^0.4.4"
toml-sort = "^0.23.1"

[tool.poetry.extras]
dev = ["pytest", "pytest-cov"]
docs = [
  "furo",
  "myst_parser",
  "sphinx",
  "sphinx_autodoc_typehints",
  "sphinx_copybutton"
]
test = ["pytest", "pytest-cov"]

[tool.poetry.group.dev.dependencies]
jupyterlab = "^4.1.5"
lxml-stubs = "^0.5.1"
notebook = "^7.1.2"
pandas-stubs = "^2.2.1.240316"
pytest-mock = "^3.14.0"
ruff = "^0.3.5"
sp-repo-review = "^2024.4.23"
types-beautifulsoup4 = "^4.12.0.20240229"
types-cachetools = "^5.3.0.7"
types-cffi = "^1.16.0.20240331"
types-colorama = "^0.4.15.20240311"
types-croniter = "^2.0.0.20240423"
types-decorator = "^5.1.8.20240310"
types-jsonschema = "^4.21.0.20240331"
types-openpyxl = "^3.1.0.20240408"
types-protobuf = "^5.26.0.20240422"
types-psutil = "^5.9.5.20240423"
types-psycopg2 = "^2.9.21.20240417"
types-pycurl = "^7.45.3.20240421"
types-pygments = "^2.17.0.20240310"
types-pyopenssl = "^24.0.0.20240417"
types-pyyaml = "^6.0.12.20240311"
types-redis = "^4.6.0.20240423"
types-regex = "^2024.4.16.20240423"
types-setuptools = "^69.5.0.20240423"
types-six = "^1.16.21.20240311"
types-tabulate = "^0.9.0.20240106"
types-toml = "^0.10.8.20240310"
types-toposort = "^1.10.0.1"
types-tqdm = "^4.66.0.20240417"
types-ujson = "^5.9.0.0"
types-xmltodict = "^0.13.0.3"

[tool.poetry.scripts]
timestep = 'timestep.__main__:main'

[tool.poetry-dynamic-versioning]
enable = true
substitution.files = ["src/timestep/__init__.py"]

[tool.pylint]
ignore-paths = [".*/_version.py"]
py-version = "3.10"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-function-docstring",
  "missing-module-docstring",
  "wrong-import-position"
]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"

[tool.pytest.ini_options]
addopts = ["--showlocals", "--strict-config", "--strict-markers", "-ra"]
filterwarnings = [
  "error"
]
log_cli_level = "INFO"
minversion = "6.0"
testpaths = [
  "tests"
]
xfail_strict = true

[tool.ruff]
src = ["src"]
target-version = "py39"

[tool.ruff.lint]
extend-select = [
  "ARG", # flake8-unused-arguments
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "EM", # flake8-errmsg
  "EXE", # flake8-executable
  "G", # flake8-logging-format
  "I", # isort
  "ICN", # flake8-import-conventions
  "NPY", # NumPy specific rules
  "PD", # pandas-vet
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL", # pylint
  "PT", # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "RET", # flake8-return
  "RUF", # Ruff-specific
  "SIM", # flake8-simplify
  "T20", # flake8-print
  "UP", # pyupgrade
  "YTT" # flake8-2020
]
ignore = [
  "ISC001", # Conflicts with formatter
  "PLR09", # Too many <...>
  "PLR2004" # Magic value used in comparison
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"noxfile.py" = ["T20"]
"tests/**" = ["T20"]

[tool.setuptools_scm]
write_to = "src/timestep/_version.py"
