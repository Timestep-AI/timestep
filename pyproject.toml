[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.black]
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
(
  ^/foo.py    # exclude a file named foo.py in the root of the project
  | .*_pb2.py  # exclude autogenerated Protocol Buffer files anywhere in the project
)
'''
line-length = 88
target-version = ['py311']

[tool.commitizen]
major_version_zero = false
name = "cz_conventional_commits"
pre_bump_hooks = [
  "scripts/kompose-convert.sh"
]
tag_format = "$version"
update_changelog_on_bump = true
version_files = [
  ".env:VERSION",
  "pyproject.toml:version"
]
version_provider = "poetry"
version_scheme = "semver"

[tool.mypy]
plugins = ["pydantic.mypy"]

[tool.poetry]
authors = ["Michael Schock <m@mjschock.com>"]
description = ""
name = "timestep"
packages = [{from = "src", include = "timestep"}]
readme = "README.md"
version = "2.0.0"

[tool.poetry.dependencies]
autorom = "^0.6.1"
awscli = {git = "https://github.com/aws/aws-cli.git", rev = "v2"}
cdktf = "^0.17.3"
cdktf-cdktf-provider-cloudinit = "^7.0.0"
cdktf-cdktf-provider-digitalocean = "^8.0.0"
cdktf-cdktf-provider-external = "^7.0.0"
cdktf-cdktf-provider-helm = "^7.0.0"
cdktf-cdktf-provider-http = "^6.0.0"
cdktf-cdktf-provider-kubernetes = "^8.0.0"
cdktf-cdktf-provider-local = "^7.0.0"
cdktf-cdktf-provider-null = "^7.0.0"
cloud-init-gen = "^1.2.0"
cmake = "^3.27.1"
dm-haiku = "^0.0.10"
flax = "^0.7.4"
gymnasium = {extras = ["all"], version = "^0.29.1"}
gymnasium-robotics = "^1.2.2"
ivy = "^0.0.3.0"
jax = {extras = ["cuda12-pip"], version = "^0.4.16"}
langchain = "^0.0.279"
marvin = "^1.2.1"
minari = "^0.4.1"
mujoco = "^2.3.3"
open-spiel = "^1.3"
patchelf = "^0.17.2.1"
pettingzoo = {extras = ["all"], version = "^1.23.1"}
prefect = "^2.11.4"
prefect-jupyter = "^0.2.0"
prefect-kubernetes = "^0.2.11"
prefect-ray = "^0.2.5"
prefect-shell = "^0.1.5"
prefect-sqlalchemy = "^0.2.4"
pygbag = "^0.8.2"
python = ">=3.11,<3.12"
python-dotenv = "^1.0.0"
ray = "^2.7.0"
seaborn = "^0.13.0"
skypilot = {extras = ["all"], path = "src/skypilot"}
supersuit = "^3.9.0"
sympy = "^1.12"
torch = {url = "https://download.pytorch.org/whl/nightly/cu121_pypi_cudnn/torch-2.2.0.dev20230930%2Bcu121.with.pypi.cudnn-cp311-cp311-linux_x86_64.whl"}
torchaudio = {url = "https://download.pytorch.org/whl/nightly/cu121/torchaudio-2.2.0.dev20230930%2Bcu121-cp311-cp311-linux_x86_64.whl"}
torchrl-nightly = "^2023.9.30"
torchvision = {url = "https://download.pytorch.org/whl/nightly/cu121/torchvision-0.17.0.dev20230930%2Bcu121-cp311-cp311-linux_x86_64.whl"}
uvicorn = {extras = ["standard"], version = "^0.23.1"}

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
commitizen = "^3.6.0"
mypy = "^1.5.1"
pre-commit = "^3.3.3"
pylint = "^2.17.5"
ruff = "^0.0.282"
toml-sort = "^0.23.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.3.1"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "jax"
priority = "primary"
url = "https://storage.googleapis.com/jax-releases/jax_releases.html"

[[tool.poetry.source]]
name = "jax-cuda"
priority = "primary"
url = "https://storage.googleapis.com/jax-releases/jax_cuda_releases.html"

[tool.ruff]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv"
]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "ANN", "ARG", "B", "BLE", "C", "COM", "D", "DJ", "DTZ", "E", "EM", "ERA", "EXE", "F", "FBT", "G", "I", "ICN", "INP", "ISC", "N", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "Q", "RET", "RSE", "RUF", "S", "SIM", "SLF", "T", "TCH", "TID", "TRY", "UP", "W", "YTT"]
ignore = []
# Same as Black.
line-length = 88
per-file-ignores = {}
select = [
  "C90", # mccabe
  "E", # pycodestyle (errors)
  "F", # Pyflakes
  "I", # isort
  "N", # pep8-naming
  "W" # pycodestyle (warnings)
]
# Assume Python 3.11.
target-version = "py311"
unfixable = []

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
