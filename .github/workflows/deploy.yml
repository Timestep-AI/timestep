name: Deploy

on:
  push: # TODO: trigger apply only on tags (just plan on other branches)
    branches:
      - main

jobs:
  build-base:
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare environment
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: |
          secret_keys=$(echo "$SECRETS_CONTEXT" | jq -r 'keys[]')
          var_keys=$(echo "$VARS_CONTEXT" | jq -r 'keys[]')

          for key in $secret_keys; do
            if [ "$key" != "github_token" ]; then
              lowercase_key=$(echo "$key" | tr '[:upper:]' '[:lower:]')
              secret_value=$(echo "$SECRETS_CONTEXT" | jq -r ".$key")
              echo "$secret_value" > "secrets/$lowercase_key"
            fi
          done

          for key in $var_keys; do
            var_value=$(echo "$VARS_CONTEXT" | jq -r ".$key")
            echo "$key=$var_value" >> .env
          done

      - name: Build base image
        run: |
          ./src/timestep/infra/cicd/build.sh

  build-cicd:
    needs: build-base
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare environment
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: |
          secret_keys=$(echo "$SECRETS_CONTEXT" | jq -r 'keys[]')
          var_keys=$(echo "$VARS_CONTEXT" | jq -r 'keys[]')

          for key in $secret_keys; do
            if [ "$key" != "github_token" ]; then
              lowercase_key=$(echo "$key" | tr '[:upper:]' '[:lower:]')
              secret_value=$(echo "$SECRETS_CONTEXT" | jq -r ".$key")
              echo "$secret_value" > "secrets/$lowercase_key"
            fi
          done

          for key in $var_keys; do
            var_value=$(echo "$VARS_CONTEXT" | jq -r ".$key")
            echo "$key=$var_value" >> .env
          done

      - name: Build cicd image
        env:
          IMAGE_NAME: cicd
        run: |
          ./src/timestep/infra/cicd/build.sh

  build:
    needs: build-base
    strategy:
      matrix:
       image_name: [ "app", "caddy" ]
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Prepare environment
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: |
          secret_keys=$(echo "$SECRETS_CONTEXT" | jq -r 'keys[]')
          var_keys=$(echo "$VARS_CONTEXT" | jq -r 'keys[]')

          for key in $secret_keys; do
            if [ "$key" != "github_token" ]; then
              lowercase_key=$(echo "$key" | tr '[:upper:]' '[:lower:]')
              secret_value=$(echo "$SECRETS_CONTEXT" | jq -r ".$key")
              echo "$secret_value" > "secrets/$lowercase_key"
            fi
          done

          for key in $var_keys; do
            var_value=$(echo "$VARS_CONTEXT" | jq -r ".$key")
            echo "$key=$var_value" >> .env
          done

      - name: Build ${{ matrix.image_name }} image
        env:
          IMAGE_NAME: ${{ matrix.image_name }}
        run: |
          ./src/timestep/infra/cicd/build.sh

  deploy:
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    needs: [build-cicd, build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare environment
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: |
          secret_keys=$(echo "$SECRETS_CONTEXT" | jq -r 'keys[]')
          var_keys=$(echo "$VARS_CONTEXT" | jq -r 'keys[]')

          for key in $secret_keys; do
            if [ "$key" != "github_token" ]; then
              lowercase_key=$(echo "$key" | tr '[:upper:]' '[:lower:]')
              secret_value=$(echo "$SECRETS_CONTEXT" | jq -r ".$key")
              echo "$secret_value" > "secrets/$lowercase_key"
            fi
          done

          for key in $var_keys; do
            var_value=$(echo "$VARS_CONTEXT" | jq -r ".$key")
            echo "$key=$var_value" >> .env
          done

      - name: Deploy
        run: |
          ./src/timestep/infra/cicd/deploy.sh

  test:
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    needs: [deploy]
    steps:
      - name: Install doc2unix
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends dos2unix

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Validate agent protocol compliance
        run: |
          # URL=https://www.timestep.ai/api/agents/<agent_id> bash -c "$(curl -fsSL https://agentprotocol.ai/test.sh)"
          curl -fsSL https://agentprotocol.ai/test.sh > test.sh
          dos2unix test.sh
          URL="https://www.timestep.ai/api/agents/<agent_id>" bash test.sh
