name: "Apply Stack after PR is Merged"

on:
  push:
    branches:
      - main

env:
  CDKTF_LOG_LEVEL: WARNING
  CLOUD_INSTANCE_PROVIDER: ${{ vars.CLOUD_INSTANCE_PROVIDER }}
  DO_TOKEN: ${{ secrets.DO_TOKEN }}
  DOMAIN_NAME_REGISTRAR_PROVIDER: ${{ vars.DOMAIN_NAME_REGISTRAR_PROVIDER }}
  KUBECONTEXT: ${{ vars.KUBECONTEXT }}
  NAMECHEAP_API_KEY: ${{ secrets.NAMECHEAP_API_KEY }}
  NAMECHEAP_API_USER: ${{ secrets.NAMECHEAP_API_USER }}
  NAMECHEAP_USER_NAME: ${{ secrets.NAMECHEAP_USER_NAME }}
  PREFECT_CLOUD_WORKSPACE: ${{ vars.PREFECT_CLOUD_WORKSPACE }}
  PRIMARY_DOMAIN_NAME: ${{ vars.PRIMARY_DOMAIN_NAME }}
  SSH_PUBLIC_KEY: ${{ vars.SSH_PUBLIC_KEY }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  TF_HOSTNAME: ${{ vars.TF_HOSTNAME }}
  TF_ORGANIZATION: ${{ vars.TF_ORGANIZATION }}
  TF_WORKSPACE: ${{ vars.TF_WORKSPACE }}

permissions:
  contents: read
  pull-requests: write
  issues: read

jobs:
  terraform:
    name: "Terraform CDK Deploy"
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "18.15.0"
      - run: |
          npm install -g cdktf-cli@0.16.3

      # - name: Install dependencies
      #   run: yarn install

      # - name: Generate module and provider bindings
      #   run: npx cdktf-cli get

      # # Remove this step if you don't have any
      # - name: Run unit tests
      #   run: yarn test

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11.3'
      - run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipx
          python -m pipx ensurepath
          pipx install poetry
          poetry install
          poetry run prefect cloud login --key ${{ secrets.PREFECT_API_KEY }} --workspace ${{ env.PREFECT_CLOUD_WORKSPACE }}

      - uses: alexellis/arkade-get@master
        with:
          k3sup: latest

      - name: Run Terraform CDK
        uses: hashicorp/terraform-cdk-action@v0.1.27
        with:
          terraformVersion: 1.3.9
          cdktfVersion: 0.16.3
          stackName: ${{ env.PRIMARY_DOMAIN_NAME }}
          mode: auto-approve-apply
          # mode: auto-approve-destroy
          terraformCloudToken: ${{ secrets.TF_API_TOKEN }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
