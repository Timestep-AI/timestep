# (cors) {
# 	@origin header Origin {args[0]}
# 	header @origin Access-Control-Allow-Origin "{args[0]}"
# 	header @origin Access-Control-Allow-Methods "OPTIONS,HEAD,GET,POST,PUT,PATCH,DELETE"
# 	header @origin Access-Control-Allow-Headers "Origin,Accept,Content-Type,Authorization"
# }

http://{$PRIMARY_DOMAIN_NAME}:80 {
	redir http://www.{$PRIMARY_DOMAIN_NAME}{uri}
}

http://www.{$PRIMARY_DOMAIN_NAME}:80 {
	# import cors {http.request.header.Origin}
	# import cors http://localhost:8000

	encode gzip

	# handle /api/chat {
	# 	reverse_proxy backend:8000
	# }

	handle /api/rest* {
		reverse_proxy hasura-graphql-engine:8080
	}

	handle /api* {
		# allow cors for http://localhost:8000
		# header Access-Control-Allow-Origin http://localhost:8000
		# header Access-Control-Allow-Origin *
		# header Access-Control-Allow-Methods *
		# header Allow *

		# header {
		# 	# -Allow
		# 	-Server

		# 	# [defer]
		# }

		reverse_proxy backend:8000

		# header {
		# 	# -Server
		# 	# +Allow "OPTIONS, GET, POST, PUT, DELETE"
		# 	Allow POST

		# 	# [defer]
		# }
	}

	handle /console* {
		reverse_proxy hasura-graphql-engine:8080
	}

	handle /docs {
		reverse_proxy backend:8000
	}

	# handle /flows {
	# 	reverse_proxy backend:8000
	# }

	# handle /graphql {
	# 	reverse_proxy backend:8000
	# }

	# handle /hello {
	# 	reverse_proxy backend:8000
	# }

	# handle /hello2 {
	# 	reverse_proxy backend:8000
	# }

	handle /openapi.json {
		reverse_proxy backend:8000
	}

	# handle /query {
	# 	reverse_proxy backend:8000
	# }

	# handle /ready {
	# 	reverse_proxy backend:8000
	# }

	handle /redoc {
		reverse_proxy backend:8000
	}

	# handle /rest/* {
	# 	reverse_proxy backend:8000
	# }

	# handle /sky {
	# 	reverse_proxy backend:8000
	# }

	# handle /test {
	# 	reverse_proxy backend:8000
	# }

	handle /v1/graphql {
		# 	# reverse_proxy backend:8000
		reverse_proxy hasura-graphql-engine:8080
	}

	handle /v1/auth* {
		# uri replace /v1/auth /auth
		uri strip_prefix /v1/auth
		reverse_proxy nhost-hasura-auth:4000
	}

	handle /v1/functions* {
		# uri replace /v1/functions /api/rest
		# reverse_proxy hasura-graphql-engine:8080

		uri replace /v1/functions /api
		reverse_proxy backend:8000
	}

	handle /v1/storage* {
		uri replace /v1/storage /v1
		reverse_proxy nhost-hasura-storage:8000
	}

	handle /v1* {
		reverse_proxy hasura-graphql-engine:8080
	}

	handle /v2* {
		reverse_proxy hasura-graphql-engine:8080
	}

	# add_header X-Content-Type-Options "nosniff";

	header {
		# 	# # disable FLoC tracking
		# 	# Permissions-Policy interest-cohort=()

		# 	# # enable HSTS
		# 	# Strict-Transport-Security max-age=31536000;

		# 	# # disable clients from sniffing the media type
		# 	# X-Content-Type-Options nosniff

		# 	# # clickjacking protection
		# 	# X-Frame-Options DENY

		X-Frame-Options "SAMEORIGIN"
		X-XSS-Protection "1; mode=block"
		X-Content-Type-Options "nosniff"
	}

	handle {
		# reverse_proxy frontend:9000

		root * /home/ubuntu/app/frontend/dist/spa
		try_files {path} /index.html
		file_server
	}
}
