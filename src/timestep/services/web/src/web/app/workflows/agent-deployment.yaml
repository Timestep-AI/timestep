apiVersion: apps/v1
kind: Deployment
metadata:
  # annotations:
    # rollme: '{{ randAlphaNum 5 | quote }}'
  # creationTimestamp: null
  labels:
    app: agent
  name: agent
  namespace: default
spec:
  # replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: agent
  # strategy: {}
  template:
    metadata:
      # annotations:
        # rollme: {{ randAlphaNum 5 | quote }}
      # creationTimestamp: null
      labels:
        # io.kompose.network/timestep-default: "true"
        app: agent
    spec:
      containers:
        # - command:
        #     - /home/ubuntu/app/docker-entrypoint.sh
        #     - poetry
        #     - run
        #     - uvicorn
        #     - src.web.main:app
        #     - --proxy-headers
        #     - --host
        #     - 0.0.0.0
        #     - --port
        #     - "5000"
        - command:
            - tail
            - -f
            - /dev/null
          # envFrom:
          #   - configMapRef:
          #       name: web-config-map
          #   - secretRef:
          #       name: web-secret
          # image: registry.gitlab.com/timestep-ai/timestep/web:{{ .Chart.AppVersion }}
          image: registry.gitlab.com/timestep-ai/timestep/web:latest
          imagePullPolicy: Always
          name: agent
          # ports:
            # - containerPort: 5000
              # hostPort: 5000
              # protocol: TCP
            # - containerPort: 5678 # TODO: only expose this if debug is enabled in the environment
              # hostPort: 5678
              # protocol: TCP
          # readinessProbe:
          #   httpGet:
          #     path: /ready
          #     port: 5000
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          # resources: {}
          # volumeMounts:
          #  - mountPath: /dev/shm
          #    name: dshm
      imagePullSecrets:
        - name: regcred
      # restartPolicy: Always
# status: {}
      # volumes:
      #  - name: dshm
      #    emptyDir:
      #       medium: Memory
      #       # sizeLimit: 1.2Gi # TODO: set this to > 30% of available RAM, e.g. int(0.3 * MEMORY_SIZE_GB)GB
