http://{$PRIMARY_DOMAIN_NAME}:80 {
	redir http://www.{$PRIMARY_DOMAIN_NAME}{uri}
}

http://www.{$PRIMARY_DOMAIN_NAME}:80 {
	encode gzip

	handle /api/rest* {
		reverse_proxy hasura-graphql-engine:8080
	}

	handle /api* {
		reverse_proxy server:8000
	}

	handle /console* {
		reverse_proxy hasura-graphql-engine:8080
	}

	handle /docs {
		reverse_proxy server:8000
	}

	handle /openapi.json {
		reverse_proxy server:8000
	}

	handle /redoc {
		reverse_proxy server:8000
	}

	handle /v1/graphql {
		reverse_proxy hasura-graphql-engine:8080
	}

	handle /v1/auth* {
		uri strip_prefix /v1/auth
		reverse_proxy nhost-hasura-auth:4000
	}

	handle /v1/functions* {
		uri replace /v1/functions /api
		reverse_proxy server:8000
	}

	handle /v1/storage* {
		uri replace /v1/storage /v1
		reverse_proxy nhost-hasura-storage:8000
	}

	handle /v1* {
		reverse_proxy hasura-graphql-engine:8080
	}

	handle /v2* {
		reverse_proxy hasura-graphql-engine:8080
	}

	handle {
		# root * /home/ubuntu/app/client/dist/spa

		# Check if PRIMARY_DOMAIN_NAME ends with ".local"
		@isLocalDomain {
			expression {host}.endsWith(".local")
		}

		# Use reverse_proxy to client:9000 if it's a ".local" domain
		reverse_proxy @isLocalDomain client:9000

		# header {
		# 	X-Frame-Options "SAMEORIGIN"
		# 	X-XSS-Protection "1; mode=block"
		# 	X-Content-Type-Options "nosniff"
		# }

		# If not a ".local" domain, serve static content
		# try_files {path} /index.html
		# file_server
	}
}
