#cloud-config
# See documentation for more configuration examples
# https://cloudinit.readthedocs.io/en/latest/reference/examples.html
---
disable_root: true
package_reboot_if_required: true
package_update: true
package_upgrade: true
packages:
  - build-essential
  - curl
  - default-jdk
  - direnv
  - figlet
  - jq
  - libbz2-dev
  - libffi-dev
  - liblzma-dev
  - libncursesw5-dev
  - libreadline-dev
  - libsqlite3-dev
  - libssl-dev
  - libxml2-dev
  - libxmlsec1-dev
  - net-tools
  - tk-dev
  - unzip
  - xz-utils
  - zlib1g-dev
runcmd:
  - # Installing and configuring Oh My Bash...
  - runuser -l ubuntu -c 'bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)"'
  - runuser -l ubuntu -c 'echo "" >> $HOME/.oh-my-bash/custom/example.sh'
  - runuser -l ubuntu -c 'echo OSH_THEME=\"zork\" >> $HOME/.oh-my-bash/custom/example.sh'
  - # Configuring direnv bash hook...
  - runuser -l ubuntu -c 'echo "" >> $HOME/.bashrc'
  - runuser -l ubuntu -c 'echo "eval \"\$(direnv hook bash)\"" >> $HOME/.bashrc'
  - # Installing anyenv and **envs...
  - runuser -l ubuntu -c 'git clone https://github.com/anyenv/anyenv ~/.anyenv'
  - runuser -l ubuntu -c 'echo "" >> $HOME/.bashrc'
  - runuser -l ubuntu -c 'echo export PATH=\$HOME/.anyenv/bin:\$PATH >> $HOME/.bashrc'
  - runuser -l ubuntu -c 'echo "eval \"\$(anyenv init -)\"" >> $HOME/.bashrc'
  - runuser -l ubuntu -c '$HOME/.anyenv/bin/anyenv install --force-init'
  - runuser -l ubuntu -c '$HOME/.anyenv/bin/anyenv install jenv'
  - runuser -l ubuntu -c '$HOME/.anyenv/bin/anyenv install nodenv'
  - runuser -l ubuntu -c '$HOME/.anyenv/bin/anyenv install goenv'
  - runuser -l ubuntu -c '$HOME/.anyenv/bin/anyenv install pyenv'
  - # Install arkade and tools...
  - runuser -l ubuntu -c 'curl -sLS https://get.arkade.dev | sudo sh'
  - runuser -l ubuntu -c 'echo "" >> $HOME/.bashrc'
  - runuser -l ubuntu -c 'echo export PATH=\$HOME/.arkade/bin:\$PATH >> $HOME/.bashrc'
  - runuser -l ubuntu -c 'arkade get k3sup'
  - # Install K3s...
  - runuser -l ubuntu -c 'mkdir $HOME/.kube'
  - runuser -l ubuntu -c '$HOME/.arkade/bin/k3sup install --context timestep-ai-k3s-cluster --k3s-extra-args "--disable traefik" --local --local-path $HOME/.kube/config --user ubuntu'
users:
  - default
  - groups: sudo
    name: ubuntu
    shell: /bin/bash
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDmARbi3ifhheTo5xp4/bagOdFebh9MhW8SqnLdB6TIS/MWJQbH+pyFavaBzPduXGDhsgzv2t1OUTbJcz6jSw0ihtfDc0o7acoqmOyGA2DJmUn9u0ZpPnHoP/PsKqtLQEPCqcRa4iM7phTcy8u/kX+MVhPfRw/SI0eXubLAT5qq34lYiro67egGz44yR0CWCPO9vBUC5+f3iRc8E33oWUyp1hh1ls7mh/TRToWhpnM0Oirr3p4KKIfGMD7nZC8oriMZw+nWBSdzhprb4Li7a6dOQ6MTJ6Z+7yrp8WjYnO94CmZKkdiEPhsBRHCF+H1ylXDAobul8qAE6cxiR6Gw5i3hUKM3sRL4+CqkQ4Pw7LolFcRSZ9UCQ0s0ULU3zmMDH0xo1zlukjWGKmHjNxyBU3pLRKHMS+eRsdTtRCkQoEbZpoFajuXqc2GxSn9JKFrBGDC17uG0DQCCYnnJlX707ZkJadKk4aNva9lVCO9gtsm7Qoumafd9qG1jA6+iHvTc7FU= timestep-ai-development
    sudo: ALL=(ALL) NOPASSWD:ALL
write_files:
  - content: |
      #!/bin/sh
      [ -r /etc/lsb-release ] && . /etc/lsb-release

      if [ -z "$DISTRIB_DESCRIPTION" ] && [ -x /usr/bin/lsb_release ]; then
            # Fall back to using the very slow lsb_release utility
            DISTRIB_DESCRIPTION=$(lsb_release -s -d)
      fi

      printf "Welcome to \n%s\nv%s\nrunning on %s (%s %s %s).\n" "$(figlet Timestep AI)" "$(date +'%Y.%m.%d')" "$DISTRIB_DESCRIPTION" "$(uname -o)" "$(uname -r)" "$(uname -m)"
    path: /etc/update-motd.d/00-header
    permissions: "0o755"
  - content: |
      mirrors:
        registry.localhost:
          endpoint:
            - "http://registry:5000"
    path: /etc/rancher/k3s/registries.yaml
    permissions: "0o644"
