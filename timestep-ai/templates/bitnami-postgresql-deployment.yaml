apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --build local --build-command helm package timestep-ai --chart --file docker-compose.yml --push-image --push-command helm push timestep-ai-0.0.1.tgz oci://registry.gitlab.com/timestep-ai/timestep --push-image-registry registry.gitlab.com --out timestep-ai --secrets-as-files --verbose
    kompose.version: 1.30.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: bitnami-postgresql
  name: bitnami-postgresql
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: bitnami-postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --build local --build-command helm package timestep-ai --chart --file docker-compose.yml --push-image --push-command helm push timestep-ai-0.0.1.tgz oci://registry.gitlab.com/timestep-ai/timestep --push-image-registry registry.gitlab.com --out timestep-ai --secrets-as-files --verbose
        kompose.version: 1.30.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/timestep-default: "true"
        io.kompose.service: bitnami-postgresql
    spec:
      containers:
        - env:
            - name: POSTGRESQL_DATABASE
              value: timestep_ai
            - name: POSTGRESQL_PASSWORD
              value: password123
            - name: POSTGRESQL_USERNAME
              value: agent
          image: docker.io/bitnami/postgresql:15.3.0
          name: bitnami-postgresql
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /bitnami/postgresql
              name: postgresql-data
      restartPolicy: Always
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-data
status: {}
