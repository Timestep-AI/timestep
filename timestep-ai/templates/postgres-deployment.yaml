apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --chart --file docker-compose.yml --out timestep-ai --secrets-as-files --verbose
    kompose.image-pull-secret: regcred
    kompose.version: 1.30.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --chart --file docker-compose.yml --out timestep-ai --secrets-as-files --verbose
        kompose.image-pull-secret: regcred
        kompose.version: 1.30.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/timestep-default: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRESQL_PASSWORD
              value: prefect-rocks
            - name: POSTGRESQL_PASSWORD_FILE
              value: /run/secrets/postgresql_password
          image: registry.gitlab.com/timestep-ai/timestep/postgres:latest
          name: postgres
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /run/secrets/postgresql_password
              name: postgresql_password
              subPath: postgresql_password
            - mountPath: /bitnami/postgresql
              name: postgres
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
      volumes:
        - name: postgresql_password
          secret:
            items:
              - key: postgresql_password
                path: postgresql_password
            secretName: postgresql_password
        - name: postgres
          persistentVolumeClaim:
            claimName: postgres
status: {}
