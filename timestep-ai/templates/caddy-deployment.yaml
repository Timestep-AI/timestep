apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --chart --file docker-compose.yml --out timestep-ai --secrets-as-files --verbose
    kompose.image-pull-secret: regcred
    kompose.service.expose: timestep.local,www.timestep.local
    kompose.service.expose.ingress-class-name: caddy
    kompose.version: 1.30.0 (HEAD)
    kubernetes.io/ingress.class: caddy
  creationTimestamp: null
  labels:
    io.kompose.service: caddy
  name: caddy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: caddy
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --chart --file docker-compose.yml --out timestep-ai --secrets-as-files --verbose
        kompose.image-pull-secret: regcred
        kompose.service.expose: timestep.local,www.timestep.local
        kompose.service.expose.ingress-class-name: caddy
        kompose.version: 1.30.0 (HEAD)
        kubernetes.io/ingress.class: caddy
      creationTimestamp: null
      labels:
        io.kompose.network/timestep-default: "true"
        io.kompose.service: caddy
    spec:
      containers:
        - image: registry.gitlab.com/timestep-ai/timestep/caddy:1.0.26
          name: caddy
          ports:
            - containerPort: 80
              hostPort: 2019
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /root/.caddy
              name: caddy-certs
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
      volumes:
        - name: caddy-certs
          persistentVolumeClaim:
            claimName: caddy-certs
status: {}
