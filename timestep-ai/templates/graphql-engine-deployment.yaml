apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --chart --file docker-compose.yml --out timestep-ai --secrets-as-files --verbose
    kompose.version: 1.30.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: graphql-engine
  name: graphql-engine
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: graphql-engine
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --chart --file docker-compose.yml --out timestep-ai --secrets-as-files --verbose
        kompose.version: 1.30.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/timestep-default: "true"
        io.kompose.service: graphql-engine
    spec:
      containers:
        - env:
            - name: HASURA_GRAPHQL_ADMIN_SECRET
              value: nhost-admin-secret
            - name: HASURA_GRAPHQL_DATABASE_URL
              value: postgres://postgres:secret-pg-password-never-use-this-value@postgres:5432/postgres
            - name: HASURA_GRAPHQL_ENABLE_CONSOLE
              value: "true"
            - name: HASURA_GRAPHQL_JWT_SECRET
              value: '{"type":"HS256", "key":"5152fa850c02dc222631cca898ed1485821a70912a6e3649c49076912daa3b62182ba013315915d64f40cddfbb8b58eb5bd11ba225336a6af45bbae07ca873f3","issuer":"hasura-auth"}'
            - name: HASURA_GRAPHQL_LOG_LEVEL
              value: debug
            - name: HASURA_GRAPHQL_UNAUTHORIZED_ROLE
              value: public
          image: hasura/graphql-engine:v2.15.2
          name: graphql-engine
          ports:
            - containerPort: 8080
              hostPort: 8080
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
